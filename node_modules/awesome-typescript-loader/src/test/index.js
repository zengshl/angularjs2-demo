"use strict";
var utils_1 = require('./utils');
describe('main test', function () {
    it('should compile simple file', function () {
        return __awaiter(this, void 0, void 0, function* () {
            var config = {
                entry: utils_1.fixturePath(['basic', 'basic.ts'])
            };
            var stats = yield utils_1.cleanAndCompile(utils_1.createConfig(config));
            utils_1.expect(stats.compilation.errors.length).eq(0);
            var result = yield utils_1.readOutputFile();
            var expectation = yield utils_1.readFixture(['basic', 'basic.js']);
            utils_1.expectSource(result, expectation);
        });
    });
    it('should check typing', function () {
        return __awaiter(this, void 0, void 0, function* () {
            var config = {
                entry: utils_1.fixturePath(['errors', 'with-type-errors.ts'])
            };
            var stats = yield utils_1.cleanAndCompile(utils_1.createConfig(config));
            utils_1.expect(stats.compilation.errors.length).eq(1);
        });
    });
    it('should load tsx files and use tsconfig', function () {
        return __awaiter(this, void 0, void 0, function* () {
            var tsconfig = utils_1.fixturePath(['tsx', 'tsconfig.json']);
            var config = {
                entry: utils_1.fixturePath(['tsx', 'basic.tsx'])
            };
            var loaderQuery = { tsconfig: tsconfig };
            var stats = yield utils_1.cleanAndCompile(utils_1.createConfig(config, { loaderQuery: loaderQuery }));
            utils_1.expect(stats.compilation.errors.length).eq(1);
            var result = yield utils_1.readOutputFile();
            var expectation = 'return React.createElement("div", null, "hi there");';
            utils_1.expectSource(result, expectation);
        });
    });
});
//# sourceMappingURL=index.js.map