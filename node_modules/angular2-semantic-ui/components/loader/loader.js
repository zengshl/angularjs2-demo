var core_1 = require('@angular/core');
var LoaderComponent = (function () {
    function LoaderComponent(el) {
        this.parentEle = el.nativeElement.parentElement;
    }
    Object.defineProperty(LoaderComponent.prototype, "active", {
        set: function (val) {
            this.isActive = val;
            if (this.parentEle) {
                if (val) {
                    this.parentEle.classList.add("ui");
                    this.parentEle.classList.add("segment");
                }
                else {
                    this.parentEle.classList.remove("ui");
                    this.parentEle.classList.remove("segment");
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Boolean), 
        __metadata('design:paramtypes', [Boolean])
    ], LoaderComponent.prototype, "active", null);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', String)
    ], LoaderComponent.prototype, "loaderText", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', String)
    ], LoaderComponent.prototype, "loaderSize", void 0);
    LoaderComponent = __decorate([
        core_1.Component({
            selector: "lsu-loader",
            template: "\n    <div class=\"ui dimmer\" [ngClass]=\"{'active': isActive}\">\n      <div class=\"ui {{loaderSize}} text loader\">{{ loaderText }}</div>\n    </div>\n  "
        }), 
        __metadata('design:paramtypes', [core_1.ElementRef])
    ], LoaderComponent);
    return LoaderComponent;
})();
exports.LoaderComponent = LoaderComponent;
//# sourceMappingURL=loader.js.map