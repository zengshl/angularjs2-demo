"use strict";
var ordinary_own_metadata_keys_1 = require("./ordinary-own-metadata-keys");
var get_proto_of_type_1 = require("./get-proto-of-type");
var set_1 = require("../shim/set");
var _Set = typeof Set === "function" ? Set : set_1.createSetPolyfill();
// https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md#ordinarymetadatakeys--o-p-
function ordinaryMetadataKeys(O, P) {
    var ownKeys = ordinary_own_metadata_keys_1.ordinaryOwnMetadataKeys(O, P);
    var parent = get_proto_of_type_1.getProtoOfType(O);
    if (parent === null) {
        return ownKeys;
    }
    var parentKeys = ordinaryMetadataKeys(parent, P);
    if (parentKeys.length <= 0) {
        return ownKeys;
    }
    if (ownKeys.length <= 0) {
        return parentKeys;
    }
    var set = new _Set();
    var keys = [];
    for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {
        var key = ownKeys_1[_i];
        var hasKey = set.has(key);
        if (!hasKey) {
            set.add(key);
            keys.push(key);
        }
    }
    for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {
        var key = parentKeys_1[_a];
        var hasKey = set.has(key);
        if (!hasKey) {
            set.add(key);
            keys.push(key);
        }
    }
    return keys;
}
exports.ordinaryMetadataKeys = ordinaryMetadataKeys;
//# sourceMappingURL=ordinary-metadata-keys.js.map