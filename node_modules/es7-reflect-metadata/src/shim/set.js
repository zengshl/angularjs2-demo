// var _Map: MapConstructor = (typeof Map !== "undefined") ? createMapPolyfill() : Map;
exports.cacheSentinel = {};
var Set = (function () {
    function Set() {
        this._map = new Map();
    }
    Object.defineProperty(Set.prototype, "length", {
        get: function () {
            return 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Set.prototype, "size", {
        get: function () {
            return this._map.size;
        },
        enumerable: true,
        configurable: true
    });
    Set.prototype.has = function (value) {
        return this._map.has(value);
    };
    Set.prototype.add = function (value) {
        this._map.set(value, value);
        return this;
    };
    Set.prototype.delete = function (value) {
        return this._map.delete(value);
    };
    Set.prototype.clear = function () {
        this._map.clear();
    };
    Set.prototype.forEach = function (callback, thisArg) {
        this._map.forEach(callback, thisArg);
    };
    return Set;
})();
exports.Set = Set;
function createSetPolyfill() {
    return Set;
}
exports.createSetPolyfill = createSetPolyfill;
//# sourceMappingURL=set.js.map